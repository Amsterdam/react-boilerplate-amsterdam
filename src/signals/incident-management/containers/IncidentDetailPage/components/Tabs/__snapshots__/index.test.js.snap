// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Tabs /> should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tabs
    onTabChanged={[MockFunction]}
    selectedTab={0}
    tabs={
      Array [
        "tab1",
        "tab2",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="tabs"
      >
        <li
          className="selected"
          onClick={[Function]}
          role="presentation"
        >
          <a>
            tab1
          </a>
        </li>
        <li
          className=""
          onClick={[Function]}
          role="presentation"
        >
          <a>
            tab2
          </a>
        </li>
      </ul>,
      "className": "incident-detail-tabs",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li
            className="selected"
            onClick={[Function]}
            role="presentation"
          >
            <a>
              tab1
            </a>
          </li>,
          <li
            className=""
            onClick={[Function]}
            role="presentation"
          >
            <a>
              tab2
            </a>
          </li>,
        ],
        "className": "tabs",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "keytab1",
          "nodeType": "host",
          "props": Object {
            "children": <a>
              tab1
            </a>,
            "className": "selected",
            "onClick": [Function],
            "role": "presentation",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "tab1",
            },
            "ref": null,
            "rendered": "tab1",
            "type": "a",
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "keytab2",
          "nodeType": "host",
          "props": Object {
            "children": <a>
              tab2
            </a>,
            "className": "",
            "onClick": [Function],
            "role": "presentation",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "tab2",
            },
            "ref": null,
            "rendered": "tab2",
            "type": "a",
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="tabs"
        >
          <li
            className="selected"
            onClick={[Function]}
            role="presentation"
          >
            <a>
              tab1
            </a>
          </li>
          <li
            className=""
            onClick={[Function]}
            role="presentation"
          >
            <a>
              tab2
            </a>
          </li>
        </ul>,
        "className": "incident-detail-tabs",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li
              className="selected"
              onClick={[Function]}
              role="presentation"
            >
              <a>
                tab1
              </a>
            </li>,
            <li
              className=""
              onClick={[Function]}
              role="presentation"
            >
              <a>
                tab2
              </a>
            </li>,
          ],
          "className": "tabs",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "keytab1",
            "nodeType": "host",
            "props": Object {
              "children": <a>
                tab1
              </a>,
              "className": "selected",
              "onClick": [Function],
              "role": "presentation",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "tab1",
              },
              "ref": null,
              "rendered": "tab1",
              "type": "a",
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "keytab2",
            "nodeType": "host",
            "props": Object {
              "children": <a>
                tab2
              </a>,
              "className": "",
              "onClick": [Function],
              "role": "presentation",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "tab2",
              },
              "ref": null,
              "rendered": "tab2",
              "type": "a",
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
